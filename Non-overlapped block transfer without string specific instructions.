section .data
	sblock db 10h, 20h, 30h, 40h, 50h, 60h, 70h
	dblock db 0h, 0h, 0h, 0h, 0h, 0h, 0h           	;dblock times 7 db 0
 
	smsg db 10,"Source Block is : "
	smsg_len equ $-smsg
 
	dmsg db 10,"Destination Block is : "
	dmsg_len equ $-dmsg
 
	space db " "
	
section .bss
	char_ans resb 2
 
%macro print 2
	mov rax, 1
	mov rdi, 1
	mov rsi, %1
	mov rdx, %2
	syscall
%endmacro
 
%macro read 2
	mov rax, 0
	mov rdi, 0
	mov rsi, %1
	mov rdx, %2
	syscall
%endmacro
 
%macro exit 0
	mov rax, 60
	mov rdi, 0
	syscall
%endmacro
 
section .text
	global _start
 
_start:
	print smsg, smsg_len
	mov rsi, sblock
	call block_display
	
	print dmsg, dmsg_len
	mov rsi, dblock
	call block_display
 
	call block_transfer
 
	print smsg, smsg_len
	mov rsi, sblock
	call block_display
	
	print dmsg, dmsg_len
	mov rsi, dblock
	call block_display
	
	exit
 
block_transfer:
	mov rsi, sblock
	mov rdi, dblock
	mov rcx, 7
 
back:
	mov al, [rsi]
	mov [rdi], al
 
	inc rsi
	inc rdi
	
	dec rcx
	jnz back
 
;with string
	;cld        	;inc rsi & rdi
	;rep movsb
 
	ret
 
	
block_display:
	mov rbp, 7
 
next_num:
	mov al, [rsi]
	push rsi
	call disp_proc
 
	print space, 1
	pop rsi
	inc rsi
	
	dec rbp
	jnz next_num
	ret
	
disp_proc:
	mov rbx, 16
	mov rcx, 2
	mov rsi, char_ans+1
 
cnt:
	mov rdx, 0
	div rbx
 
	cmp dl, 09h
	jbe add30
	add dl, 07h
 
add30:
	add dl, 30h
	mov [rsi], dl
 
	dec rsi
	dec rcx
 
	jnz cnt
	print char_ans, 2
	ret
